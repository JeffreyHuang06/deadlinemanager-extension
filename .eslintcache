[{"/Users/jeffrey/Documents/Chrome Ext/deadlinemanagerreact/src/index.jsx":"1","/Users/jeffrey/Documents/Chrome Ext/deadlinemanagerreact/src/App.jsx":"2","/Users/jeffrey/Documents/Chrome Ext/deadlinemanagerreact/src/MainDeadline.jsx":"3","/Users/jeffrey/Documents/Chrome Ext/deadlinemanagerreact/src/InputForm.jsx":"4","/Users/jeffrey/Documents/Chrome Ext/deadlinemanagerreact/src/chromeAPI/retrieveDeadlineJSON.js":"5"},{"size":410,"mtime":1609048549193,"results":"6","hashOfConfig":"7"},{"size":236,"mtime":1609314202876,"results":"8","hashOfConfig":"7"},{"size":984,"mtime":1609664106583,"results":"9","hashOfConfig":"7"},{"size":1501,"mtime":1609665711643,"results":"10","hashOfConfig":"7"},{"size":991,"mtime":1609646492168,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ilddhy",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/jeffrey/Documents/Chrome Ext/deadlinemanagerreact/src/index.jsx",[],["25","26"],"/Users/jeffrey/Documents/Chrome Ext/deadlinemanagerreact/src/App.jsx",[],"/Users/jeffrey/Documents/Chrome Ext/deadlinemanagerreact/src/MainDeadline.jsx",["27"],"import React, {useState} from 'react'\nimport './css/MeadDeadline.css'\nimport {retrieveSortedJSONList, retrieveNearestDate} from './chromeAPI/retrieveDeadlineJSON'\n\nexport default function MainDeadline() {\n    // get the date and the stuff from chrome storage\n    let [school, setSchool] = useState(\"\");\n    let [date, setDate] = useState(\"\");\n\n    async function fetchData() {\n        let res = await retrieveSortedJSONList();\n        let nearest = await retrieveNearestDate();\n\n        // parse the nearest date\n        let len = nearest.length;\n        if (len === 1){\n            setSchool(nearest[0].school);\n            setDate(nearest[0].date);\n        }\n\n    }\n    function keepfetching() {\n        setInterval(fetchData, 1000);\n    }\n\n    return (\n        <>\n            <div className=\"MainDeadline\">\n                <div className='school'>{school}</div>\n                <div classNmae='date'>{date}</div>\n            </div>\n\n            {keepfetching()}\n        </>\n    )\n}","/Users/jeffrey/Documents/Chrome Ext/deadlinemanagerreact/src/InputForm.jsx",[],"/Users/jeffrey/Documents/Chrome Ext/deadlinemanagerreact/src/chromeAPI/retrieveDeadlineJSON.js",[],["28","29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":11,"column":13,"nodeType":"36","messageId":"37","endLine":11,"endColumn":16},{"ruleId":"30","replacedBy":"38"},{"ruleId":"32","replacedBy":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar",["40"],["41"],"no-global-assign","no-unsafe-negation"]